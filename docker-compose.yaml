version: '3.8'
services:
  database:
    image: postgres:15.1-alpine
    container_name: ylab_db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 3s
      timeout: 30s
      retries: 3


  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ylab_app
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=avdeev97
      - POSTGRES_DB=ylab
      - POSTGRES_HOST=database
      - DATABASE_PORT=5432
    env_file:
      - .env
    ports:
      - '8000:8000'
    entrypoint: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    depends_on:
      database:
        condition: service_healthy
    links:
      - redis

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 3

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 10s
      retries: 3


  celery-worker:
    container_name: celery_worker
    build: .
    env_file:
      - .env
    volumes:
      - ./:/app
    command: celery -A app.celery.tasks worker --loglevel=DEBUG
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
      app:
        condition: service_started

  celery-beat:
    container_name: celery_beat
    build: .
    env_file:
      - .env
    volumes:
      - ./:/app
    command: celery -A app.celery.tasks beat --loglevel=DEBUG
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      app:
        condition: service_started
